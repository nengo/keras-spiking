project_name: KerasSpiking
pkg_name: keras_spiking
repo_name: nengo/keras-spiking

description: Spiking neuron integration for Keras
copyright_start: 2020
license: abr-free
main_branch: main

license_rst: {}

contributing_rst: {}

contributors_rst: {}

manifest_in: {}

setup_cfg:
  pytest:
    xfail_strict: True
  pylint:
    disable:
      - no-value-for-parameter # https://github.com/tensorflow/tensorflow/issues/43038
    known_third_party:
      - tensorflow
  codespell:
    ignore_words:
      - hist

docs_conf_py:
  nengo_logo: ""
  extensions:
    - nengo_sphinx_theme.ext.autoautosummary
  doctest_setup:
    - import numpy as np
    - import tensorflow as tf
  autoautosummary_change_modules:
    keras_spiking:
      - keras_spiking.layers.SpikingActivationCell
      - keras_spiking.layers.SpikingActivation
      - keras_spiking.layers.LowpassCell
      - keras_spiking.layers.Lowpass
      - keras_spiking.layers.AlphaCell
      - keras_spiking.layers.Alpha
      - keras_spiking.model_energy.ModelEnergy

ci_scripts:
  - template: static
  - template: test
    coverage: true
    pip_install:
      - $TF_VERSION
      - nengo[tests]
      - tensorflow-probability
  - template: docs
    pip_install:
      - $TF_VERSION
    pre_commands:
      - python -c "import tensorflow as tf; assert tf.test.is_gpu_available()"
  - template: examples
    pip_install:
      - $TF_VERSION
    pre_commands:
      - python -c "import tensorflow as tf; assert tf.test.is_gpu_available()"
  - template: remote-script
    remote_script: docs
    output_name: remote-docs
    host: azure-docs
    azure_name: nengo-dl-docs
    azure_group: nengo-ci
    remote_vars:
      TF_VERSION: $TF_VERSION
    remote_setup:
      - micromamba install -y "$TF_VERSION"
  - template: remote-script
    remote_script: examples
    output_name: remote-examples
    host: azure-examples
    azure_name: nengo-dl-examples
    azure_group: nengo-ci
    remote_vars:
      TF_VERSION: $TF_VERSION
    remote_setup:
      - micromamba install -y "$TF_VERSION"
  - template: deploy
    wheel: true

setup_py:
  include_package_data: True
  install_req:
    - numpy>=1.16.0
    - packaging>=20.0
    - tensorflow>=2.3.4
  optional_req:
    - tensorflow-probability>=0.11.0
  docs_req:
    - jupyter>=1.0.0
    - matplotlib>=3.6.2
    - nbsphinx>=0.8.11
    - nengo-dl>=3.4.0
    - nengo-loihi>=1.0.0
    - nengo-sphinx-theme>=1.2.1
    - numpydoc>=1.4.0
    - sphinx>=3.0.0
  tests_req:
    - pylint>=1.9.2
    - pytest>=3.6.0
    - pytest-allclose>=1.0.0
    - pytest-cov>=2.6.0
    - pytest-rng>=1.0.0
    - pytest-xdist>=1.16.0
  classifiers:
    - "Development Status :: 3 - Alpha"
    - "Intended Audience :: Science/Research"
    - "Operating System :: Microsoft :: Windows"
    - "Operating System :: POSIX :: Linux"
    - "Programming Language :: Python"
    - "Programming Language :: Python :: 3.6"
    - "Programming Language :: Python :: 3.7"
    - "Programming Language :: Python :: 3.8"
    - "Topic :: Scientific/Engineering"
    - "Topic :: Scientific/Engineering :: Artificial Intelligence"

pyproject_toml: {}

pre_commit_config_yaml: {}

version_py:
  major: 0
  minor: 3
  patch: 1
  release: false
